plugins {
  id 'java'
  id 'war'
  id 'com.eriwen.gradle.css'
  id 'com.eriwen.gradle.js'
  id 'com.google.cloud.tools.appengine-appyaml' version '+'
}

group = 'com.dencode'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 17
targetCompatibility = 17

repositories {
  mavenCentral()
  maven { url 'https://jitpack.io' }
}

dependencies {
  providedCompile 'org.eclipse.jetty:jetty-server:11.0.+'
  providedCompile 'org.eclipse.jetty:jetty-annotations:11.0.+'
  providedCompile 'org.eclipse.jetty:apache-jsp:11.0.+'
  
  implementation 'org.eclipse.jetty:apache-jstl:11.0.+'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.+'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.15.+'
  implementation 'com.ezylang:EvalEx:3.0.+'
  
  implementation 'com.github.mifmi:mifmi-commons4j:v0.3.+'
  implementation 'com.github.mozq:enigma4j:v1.+'
  
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.+'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.+'
}


combineCss {
  source "${webAppDirName}/static/css/main.css"
  dest "${buildDir}/minify/css/all.css"
}

minifyCss {
  source combineCss
  dest "${buildDir}/minify/css/all.min.css"
}

combineJs {
  encoding 'UTF-8'
  source "${webAppDirName}/static/js/analytics.js"
  source "${webAppDirName}/static/js/main.js"
  source "${webAppDirName}/static/js/adsense.js"
  dest "${buildDir}/minify/js/all.js"
}

minifyJs {
  source combineJs
  dest "${buildDir}/minify/js/all.min.js"
  sourceMap "${buildDir}/minify/js/all.sourcemap.json"
  closure {
    compilerOptions.languageIn = 'ECMASCRIPT6_STRICT'
    compilerOptions.languageOut = 'ECMASCRIPT5'
  }
}

war {
  dependsOn minifyCss, minifyJs
  
  webInf {
    from "${buildDir}/minify/css/"
    into "/static/css/"
  }
  webInf {
    from "${buildDir}/minify/js/"
    into "/static/js/"
  }
}

appengine {
  deploy {
    projectId 'GCLOUD_CONFIG'
    version 'GCLOUD_CONFIG'
    promote false
    stopPreviousVersion false
  }
}

task archiveServerMainJar(type: Jar) {
  archiveAppendix = 'server-main'
  
  from sourceSets.main.output
  include 'com/dencode/web/server/**'
  manifest {
    attributes 'Main-Class': 'com.dencode.web.server.ServerMain'
  }
}

task bundleServer(type: Copy) {
  dependsOn archiveServerMainJar, appengineStage
  
  from archiveServerMainJar.archiveFile
  from configurations.providedCompile
  into appengine.stage.stagingDirectory
}

task appRunStage(type: JavaExec) {
  dependsOn bundleServer
  
  mainClass = 'com.dencode.web.server.ServerMain'
  
  environment PORT: 8080
  workingDir appengine.stage.stagingDirectory
  classpath "${appengine.stage.stagingDirectory}/*"
}

appengineDeploy.dependsOn bundleServer
